@model ArticleViewModel

@{
    ViewData["Title"] = "UpdateArticle";
}

<h1>UpdateArticle</h1>

<h4>ArticleViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateArticle" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="row form-group">
                <div class="col-md-4">
                    <img src="/ images/articleImages/
                    @{
                        if (!string.IsNullOrEmpty(Model.Image))
                        {
                                 @Model.Image

                        }
                        else
                        {
                                 @("default-article-image.jpg")

                        }
                     }" />
                </div>
                <div class="col-md-8">
                    <label for="photo" class="control-label">Choose image:</label>
                    <input id="photo" name="photo" type="file" class="form-control" />
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Update Article" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List Without Update</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
